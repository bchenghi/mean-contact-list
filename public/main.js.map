{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/contact.service.ts","./src/environments/environment.ts","./src/app/contact.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contacts/contacts.component.ts","./src/app/contacts/contacts.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  wasSubmitted: boolean = false;\n\n\n  registerForm: FormGroup = new FormGroup({\n    email:new FormControl(null,[Validators.email,Validators.required]),\n    username:new FormControl(null,Validators.required),\n    password:new FormControl(null,Validators.required),\n    cpass:new FormControl(null,Validators.required)\n  })\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  moveToLogin(){\n    this.router.navigate(['/login']);\n  }\n\n  register(){\n    this.wasSubmitted = true; \n    if(!this.registerForm.valid || (this.registerForm.controls.password.value != this.registerForm.controls.cpass.value)){\n      console.log('Invalid Form'); \n      return;\n    }\n\n    this.userService.register(JSON.stringify(this.registerForm.value))\n    .subscribe(\n      data => this.router.navigate(['/login']),\n      error =>console.error(error)\n    )\n  }\n\n  get registerFormControls() {\n    return this.registerForm.controls;\n  }\n}\n","<div class=\"row\" style=\"margin-top:40px; padding:20px; background-color:#eff0f2;border-radius:15px;\n-webkit-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\n-moz-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\nbox-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2); color:#000000\">\n  <div class=\"col-sm-12\" style=\"text-align:center;\">\n    Register\n  </div>\n\n  <div class=\"col-sm-12\">\n    <form [formGroup]=\"registerForm\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <div *ngIf=\"wasSubmitted && registerFormControls.email.errors\" class=\"text-danger\">\n          <div *ngIf=\"registerFormControls.email.errors.required\">Email is required</div>\n          <div *ngIf=\"registerFormControls.email.invalid && !registerFormControls.email.errors.required\">Email is invalid</div>\n        </div>\n        <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n          <label for=\"exampleInputUsername\">Username</label>\n          <input formControlName=\"username\" type=\"text\" class=\"form-control\" id=\"exampleInputUsername\" aria-describedby=\"userHelp\" placeholder=\"username\">\n          <div *ngIf=\"wasSubmitted && registerFormControls.username.errors\" class=\"text-danger\">\n            <div *ngIf=\"registerFormControls.username.errors.required\">Username is required</div>\n          </div>\n          <small id=\"userHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"passwordInput\">Password</label>\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"passwordInput\" aria-describedby=\"passHelp\" placeholder=\"password\">\n        <div *ngIf=\"wasSubmitted && registerFormControls.password.errors\" class=\"text-danger\">\n          <div *ngIf=\"registerFormControls.password.errors.required\">Password is required</div>\n        </div>\n        <small id=\"passHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n          <label for=\"CpasswordInput\">Confirm Password</label>\n          <input formControlName=\"cpass\" type=\"password\" class=\"form-control\" id=\"CpasswordInput\" aria-describedby=\"CpassHelp\" placeholder=\"confirm password\">\n          <div *ngIf=\"wasSubmitted\" class=\"text-danger\">\n            <div *ngIf=\"registerFormControls.cpass.errors && registerFormControls.cpass.errors.required\">Password is required</div>\n            <div *ngIf=\"registerFormControls.cpass.value != registerFormControls.password.value\">Password must be the same</div>\n          </div>\n          <small id=\"CpassHelp\" class=\"form-text text-muted\"></small>\n        </div>\n      <div class=\"form-group\" style=\"text-align:center;\">\n          <button type=\"button\" class=\"btn btn-dark\" (click)=\"register()\">Register</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Contact} from './contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private http: HttpClient) { }\n\n  getContacts() {\n    return this.http.get<Contact[]>('api/contacts', {withCredentials:true});\n  }\n\n  addContact(newContact: Contact) {\n    var headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('api/contact', newContact, {headers: headers, withCredentials:true});\n  }\n\n  deleteContact(id: string) {\n    return this.http.delete('api/contact/' + id, {withCredentials:true});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Contact {\r\n    _id: string = '';\r\n    first_name: string = '';\r\n    last_name: string = '';\r\n    phone: string = '';\r\n    user_id: string = '';\r\n\r\n    constructor() {\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"#\">Contact Manager</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"active\">Register\r\n                        <span class=\"sr-only\">(current)</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"active\">Login</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  </nav>\r\n  \r\n  \r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 offset-md-3\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module'\n\nimport { AppComponent } from './app.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactsComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Contact } from '../contact';\nimport {ContactService} from '../contact.service';\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css'],\n  providers: [ContactService]\n})\nexport class ContactsComponent implements OnInit {\n  contactForm: FormGroup;\n  contacts: Contact[] = [];\n  contact: Contact = new Contact();\n  first_name: string = '';\n  last_name: string = '';\n  phone: string = '';\n  userId: any = '';\n  username: any = '';\n\n  constructor(private contactService: ContactService, private userService: UserService, \n    private formBuilder: FormBuilder, private router: Router) {\n    this.userService.user()\n    .subscribe(\n      data => {\n        this.userId = (data as any)._id\n        this.username = (data as any).username\n      },\n      error => this.router.navigate(['/login'])\n    )\n    this.contactForm = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      phone: ''\n    });\n  }\n\n  addContact(customerData: any) {\n    const newContact = {\n      first_name: customerData.first_name,\n      last_name: customerData.last_name,\n      phone: customerData.phone,\n      user_id: this.userId\n    }\n    this.contactService.addContact((newContact as Contact)).subscribe(contact => {\n      this.contacts.push((contact as Contact));\n      this.contactService.getContacts()\n      .subscribe(contacts => {\n      this.contacts = contacts;\n      this.contactForm.reset();\n    });\n    });\n  }\n\n  deleteContact(id: any) {\n    var contacts = this.contacts\n    this.contactService.deleteContact(id).subscribe(data => {\n      if ((data as any).n == 1) {\n        for (var i = 0; i < contacts.length; i++) {\n          if (contacts[i]._id == id) {\n            this.contacts.splice(i, 1);\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.contactService.getContacts()\n    .subscribe(contacts => {\n      this.contacts = contacts;\n    });\n  }\n\n  logout() {\n    this.userService.logout()\n    .subscribe(\n      data => this.router.navigate(['/login']),\n      error => console.log(error)\n    )\n  }\n\n}\n","<div class=\"container\">\n    <br>\n    <h1>Welcome {{username}}</h1>\n    <input type=\"button\" (click)=\"logout()\" value=\"Logout\" class=\"btn btn-dark\">\n    <br><br>\n    <h2 class=\"page-header\">Add Contact</h2>\n    <form [formGroup]=\"contactForm\" (ngSubmit)=\"addContact(contactForm.value)\">\n        <div class=\"form-group\">\n            <label>First Name</label>\n            <input type=\"text\" name=\"first_name\" class=\"form-control\" formControlName=\"first_name\">\n        </div>\n        <div class=\"form-group\">\n            <label>Last Name</label>\n            <input type=\"text\" name=\"last_name\" class=\"form-control\" formControlName=\"last_name\">\n        </div>\n        <div class=\"form-group\">\n            <label>Phone No.</label>\n            <input type=\"text\" name=\"phone\" class=\"form-control\" required formControlName=\"phone\">\n        </div>\n        <input type=\"submit\" class=\"btn btn btn-success\" value=\"Add\">\n    </form>\n</div>\n<hr>\n<div class=\"container\">\n    <div *ngFor=\"let contact of contacts\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                {{contact.first_name}}\n            </div>\n            <div class=\"col-md-3\">\n                {{contact.last_name}}\n            </div>\n            <div class=\"col-md-3\">\n                {{contact.phone}}\n            </div>\n            <div class=\"col-md-3\">\n                <input type=\"button\" (click)=\"deleteContact(contact._id)\" value=\"Delete\" class=\"btn btn-danger\">\n            </div>\n        </div>\n        <br>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', redirectTo:'login', pathMatch:'full'},\r\n  {path:'login', component:LoginComponent},\r\n  {path:'register', component:RegisterComponent},\r\n  {path:'contacts',component:ContactsComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  wasSubmitted: boolean = false;\n  loginErrorMsg: string = '';\n\n  loginForm : FormGroup=new FormGroup({\n    email: new FormControl(null,[Validators.email,Validators.required]),\n    password: new FormControl(null, Validators.required)\n  });\n  constructor(private router:Router, private userService:UserService) { }\n\n  ngOnInit() {\n  }\n\n  moveToRegister(){\n    this.router.navigate(['/register']);\n  }\n\n  login(){\n    this.wasSubmitted = true;\n\n    if(!this.loginForm.valid){\n      console.log('Invalid');\n      return;\n    }\n\n    // console.log(JSON.stringify(this.loginForm.value));\n    this.userService.login(JSON.stringify(this.loginForm.value))\n    .subscribe(\n      data => this.router.navigate(['/contacts']),\n      error => {\n        this.loginErrorMsg = \"Username or password incorrect\"\n      }\n    )\n  }\n\n  get loginFormControls() {\n    return this.loginForm.controls;\n  }\n\n}\n","<div class=\"row\" style=\"margin-top:40px; padding:20px; background-color:#eff0f2;border-radius:15px;\n-webkit-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\n-moz-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\nbox-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);color:#000000\">\n  <div *ngIf=\"loginErrorMsg\" style=\"text-align:center;\" class=\"col-sm-12 alert alert-danger\">\n    {{loginErrorMsg}}\n  </div>\n  <div class=\"col-sm-12\" style=\"text-align:center;\">\n    Login\n  </div>\n\n  <div class=\"col-sm-12\">\n    <form [formGroup]=\"loginForm\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <div *ngIf=\"wasSubmitted && loginFormControls.email.errors\" class=\"text-danger\">\n          <div *ngIf=\"loginFormControls.email.errors.required\">Email is required</div>\n          <div *ngIf=\"loginFormControls.email.invalid && !loginFormControls.email.errors.required\">Email is invalid</div>\n        </div>\n        <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"passwordInput\">Password</label>\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"passwordInput\" aria-describedby=\"passHelp\" placeholder=\"password\">\n        <div *ngIf=\"wasSubmitted && loginFormControls.password.errors\" class=\"text-danger\">\n          <div *ngIf=\"loginFormControls.password.errors.required\">Password is required</div>\n        </div>\n        <small id=\"passHelp\" class=\"form-text text-muted\"></small>\n      </div>\n\n      <div class=\"form-group\" style=\"text-align:center;\">\n          <button type=\"button\" class=\"btn btn-dark\" (click)=\"login()\">Log in</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  register(body:any){\n    return this.http.post('users/register',body,{\n      observe:'body',\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    });\n  }\n\n  login(body:any){\n    return this.http.post('users/login',body,{\n      observe:'body',\n      withCredentials:true,\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    });\n  }\n\n  user(){\n    return this.http.get('users/user',{\n      observe:'body',\n      withCredentials:true,\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    })\n  }\n\n  logout(){\n    return this.http.get('users/logout',{\n      observe:'body',\n      withCredentials:true,\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    })\n  }\n\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}